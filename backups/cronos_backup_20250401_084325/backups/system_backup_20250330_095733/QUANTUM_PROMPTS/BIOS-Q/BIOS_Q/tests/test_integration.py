#!/usr/bin/env python3
import os
import json
from pathlib import Path

def test_bios_integration():
    print("\nüîç Iniciando testes de integra√ß√£o do BIOS-Q...\n")
    
    # 1. Verificar estrutura de diret√≥rios
    required_dirs = [
        "C:\\Eva & Guarani - EGOS\\BIOS-Q\\BIOS_Q\\config",
        "C:\\Eva & Guarani - EGOS\\BIOS-Q\\BIOS_Q\\storage\\cursor_context"
    ]
    
    for dir_path in required_dirs:
        if not os.path.exists(dir_path):
            print(f"‚ùå Diret√≥rio n√£o encontrado: {dir_path}")
            return False
        print(f"‚úÖ Diret√≥rio encontrado: {dir_path}")
    
    # 2. Verificar arquivo de configura√ß√£o
    config_path = "C:\\Eva & Guarani - EGOS\\BIOS-Q\\BIOS_Q\\config\\bios_config.json"
    if not os.path.exists(config_path):
        print(f"‚ùå Arquivo de configura√ß√£o n√£o encontrado: {config_path}")
        return False
    
    try:
        # Primeiro, vamos ler o conte√∫do do arquivo para debug
        with open(config_path, 'r', encoding='utf-8') as f:
            content = f.read()
            print(f"\nüìÑ Conte√∫do do arquivo de configura√ß√£o:")
            print(content)
            print("\nüìä Tamanho do arquivo:", len(content), "bytes")
            
        # Agora tentamos carregar como JSON
        with open(config_path, 'r', encoding='utf-8') as f:
            config = json.load(f)
            print("\n‚úÖ Arquivo de configura√ß√£o carregado com sucesso")
            
            # Verificar estrutura do config
            required_keys = ['cursor_paths', 'bios_paths', 'integration']
            for key in required_keys:
                if key not in config:
                    print(f"‚ùå Chave '{key}' n√£o encontrada no arquivo de configura√ß√£o")
                    return False
                print(f"‚úÖ Chave '{key}' encontrada no arquivo de configura√ß√£o")
    except Exception as e:
        print(f"\n‚ùå Erro ao carregar configura√ß√£o: {str(e)}")
        print(f"Tipo de erro: {type(e).__name__}")
        return False
    
    # 3. Verificar arquivo de integra√ß√£o
    integration_path = "C:\\Eva & Guarani - EGOS\\BIOS-Q\\BIOS_Q\\cursor_integration.py"
    if not os.path.exists(integration_path):
        print(f"‚ùå Arquivo de integra√ß√£o n√£o encontrado: {integration_path}")
        return False
    print(f"‚úÖ Arquivo de integra√ß√£o encontrado: {integration_path}")
    
    # 4. Verificar caminhos do Cursor
    cursor_paths = [
        "C:\\Users\\Enidi\\AppData\\Roaming\\Cursor",
        "C:\\Users\\Enidi\\.cursor"
    ]
    
    for path in cursor_paths:
        if not os.path.exists(path):
            print(f"‚ùå Caminho do Cursor n√£o encontrado: {path}")
            return False
        print(f"‚úÖ Caminho do Cursor encontrado: {path}")
    
    # 5. Verificar permiss√µes
    try:
        test_file = "C:\\Eva & Guarani - EGOS\\BIOS-Q\\BIOS_Q\\storage\\cursor_context\\test.txt"
        with open(test_file, 'w') as f:
            f.write("test")
        os.remove(test_file)
        print("‚úÖ Permiss√µes de escrita verificadas com sucesso")
    except Exception as e:
        print(f"‚ùå Erro ao verificar permiss√µes: {e}")
        return False
    
    print("\n‚ú® Todos os testes passaram com sucesso!")
    return True

if __name__ == "__main__":
    test_bios_integration() 