{
    "root": true,
    "env": {
        "browser": true,
        "es2022": true,
        "node": true,
        "jest": true
    },
    "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:react/recommended",
        "plugin:react-hooks/recommended",
        "plugin:jsx-a11y/recommended",
        "plugin:import/recommended",
        "plugin:import/typescript",
        "plugin:prettier/recommended"
    ],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "ecmaFeatures": {
            "jsx": true
        },
        "ecmaVersion": "latest",
        "sourceType": "module",
        "project": [
            "./tsconfig.json"
        ]
    },
    "plugins": [
        "react",
        "react-hooks",
        "@typescript-eslint",
        "jsx-a11y",
        "import",
        "prettier"
    ],
    "rules": {
        "react/react-in-jsx-scope": "off",
        "react/prop-types": "off",
        "@typescript-eslint/explicit-module-boundary-types": "off",
        "@typescript-eslint/no-explicit-any": "warn",
        "@typescript-eslint/no-unused-vars": [
            "error",
            {
                "argsIgnorePattern": "^_",
                "varsIgnorePattern": "^_"
            }
        ],
        "import/order": [
            "error",
            {
                "groups": [
                    "builtin",
                    "external",
                    "internal",
                    [
                        "parent",
                        "sibling"
                    ],
                    "index",
                    "object",
                    "type"
                ],
                "pathGroups": [
                    {
                        "pattern": "react",
                        "group": "external",
                        "position": "before"
                    },
                    {
                        "pattern": "@/**",
                        "group": "internal",
                        "position": "after"
                    }
                ],
                "pathGroupsExcludedImportTypes": [
                    "react"
                ],
                "newlines-between": "always",
                "alphabetize": {
                    "order": "asc",
                    "caseInsensitive": true
                }
            }
        ],
        "prettier/prettier": [
            "error",
            {
                "endOfLine": "auto"
            }
        ]
    },
    "settings": {
        "react": {
            "version": "detect"
        },
        "import/resolver": {
            "typescript": {
                "alwaysTryTypes": true,
                "project": "./tsconfig.json"
            },
            "node": {
                "extensions": [
                    ".js",
                    ".jsx",
                    ".ts",
                    ".tsx"
                ]
            }
        }
    },
    "overrides": [
        {
            "files": [
                "**/*.ts",
                "**/*.tsx"
            ],
            "rules": {
                "no-undef": "off"
            }
        },
        {
            "files": [
                "**/*.test.ts",
                "**/*.test.tsx"
            ],
            "env": {
                "jest": true
            },
            "extends": [
                "plugin:jest/recommended",
                "plugin:testing-library/react"
            ],
            "plugins": [
                "jest",
                "testing-library"
            ],
            "rules": {
                "jest/expect-expect": "error",
                "jest/no-disabled-tests": "warn",
                "jest/no-focused-tests": "error",
                "jest/no-identical-title": "error",
                "jest/valid-expect": "error",
                "testing-library/await-async-query": "error",
                "testing-library/no-await-sync-query": "error",
                "testing-library/no-container": "error",
                "testing-library/no-debugging-utils": "warn"
            }
        }
    ],
    "ignorePatterns": [
        "node_modules",
        "dist",
        "build",
        "coverage",
        "*.config.js",
        "*.config.ts"
    ]
}